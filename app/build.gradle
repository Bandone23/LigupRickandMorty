apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: "kotlin-kapt"

apply from: rootProject.file("gradle-scripts/versions.gradle")


def versionMajor = 1
def versionMinor = 4
def versionPatch = 0
def versionBuild = 1

android {
    compileSdkVersion compileSdk
    defaultConfig {
        applicationId "com.example.liguprickandmorty"
        minSdkVersion minSdk
        targetSdkVersion targetSdk
        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    androidExtensions {
        experimental = true
    }

    buildTypes {
        debug {
            def type = "debug"
//            applicationIdSuffix ".${type}"
            versionNameSuffix "-${type}"
//            testCoverageEnabled true
            debuggable true
            minifyEnabled false
            shrinkResources false
            useProguard false
            signingConfig signingConfigs.debug
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }
    packagingOptions {
        exclude 'META-INF/atomicfu.kotlin_module'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs')
    implementation project(':core')

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.coroutines}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.coroutines}"

    implementation "org.jetbrains.anko:anko:${versions.anko}"
    implementation "org.jetbrains.anko:anko-sdk27:${versions.anko}"
    implementation "org.jetbrains.anko:anko-design:${versions.anko}"
    implementation "org.jetbrains.anko:anko-commons:${versions.anko}"
    implementation "org.jetbrains.anko:anko-appcompat-v7:${versions.anko}"
    implementation "org.jetbrains.anko:anko-constraint-layout:${versions.anko}"

    implementation "androidx.constraintlayout:constraintlayout:${versions.androidx_constraintlayout}"
    implementation "androidx.arch.core:core-runtime:${versions.androidx_arch_core}"
    implementation "androidx.arch.core:core-common:${versions.androidx_arch_core}"
    implementation "androidx.core:core-ktx:${versions.androidx_core}"
    implementation "androidx.lifecycle:lifecycle-runtime:${versions.androidx_lifecycle}"
    implementation "androidx.lifecycle:lifecycle-common-java8:${versions.androidx_lifecycle}"
    implementation "androidx.lifecycle:lifecycle-extensions:${versions.androidx_lifecycle}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${versions.androidx_lifecycle}"
    implementation "com.google.android.material:material:${versions.material}"

    implementation "androidx.legacy:legacy-support-v4:${versions.legacy_v4}"
    implementation "androidx.cardview:cardview:${versions.androidx_cardview}"

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    kapt "androidx.lifecycle:lifecycle-compiler:${versions.androidx_lifecycle}"

    implementation "org.koin:koin-android:${versions.koin}"
    implementation "org.koin:koin-androidx-scope:${versions.koin}"
    implementation "org.koin:koin-androidx-viewmodel:${versions.koin}"
    testImplementation "org.koin:koin-test:${versions.koin}"

    implementation "com.squareup.okhttp3:okhttp:${versions.okhttp}"
    implementation "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}"
    implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${versions.retrofit}"

    implementation "androidx.room:room-runtime:${versions.androidx_room}"
    implementation "androidx.room:room-ktx:${versions.androidx_room}"
    kapt "androidx.room:room-compiler:${versions.androidx_room}"
    testImplementation "androidx.room:room-testing:${versions.androidx_room}"
    implementation 'com.jakewharton.threetenabp:threetenabp:1.2.1'

    /* QR code generation library*/
    implementation "com.google.zxing:core:${versions.zxing}"

    /* Custom tabs */
    implementation "com.android.support:customtabs:${versions.customtabs}"

    implementation("com.squareup.picasso:picasso:${versions.picasso}") {
        exclude group: "com.android.support"
    }

    //Glide (SVG, Images)
    implementation("com.github.bumptech.glide:glide:${versions.glide}") {
        exclude group: "com.android.support"
    }
    kapt "com.github.bumptech.glide:compiler:${versions.glide}"
    implementation "com.caverock:androidsvg:${versions.caverock}"

    //Circular ImageView
    implementation "de.hdodenhof:circleimageview:${versions.circle_imageview}"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlin_version}"


    //debugImplementation "com.readystatesoftware.chuck:library:${versions.chuck}"
    //releaseImplementation "com.readystatesoftware.chuck:library-no-op:${versions.chuck}"

    //debugImplementation "com.squareup.leakcanary:leakcanary-android:${versions.leakcanary}"

    debugImplementation "com.amitshekhar.android:debug-db:${versions.debug_db}"


}